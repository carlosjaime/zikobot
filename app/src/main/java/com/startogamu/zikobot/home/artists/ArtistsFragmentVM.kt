package com.startogamu.zikobot.home.artists

import android.os.Bundle
import com.joxad.easydatabinding.fragment.v4.FragmentRecyclerBaseVM
import com.joxad.zikobot.data.db.model.ZikoArtist
import com.joxad.zikobot.data.module.localmusic.manager.LocalMusicManager
import com.raizlabs.android.dbflow.sql.language.SQLite
import com.startogamu.zikobot.BR
import com.startogamu.zikobot.R
import com.startogamu.zikobot.databinding.ArtistsFragmentBinding
import io.reactivex.android.schedulers.AndroidSchedulers
import io.reactivex.schedulers.Schedulers

/**
 * Generated by generator-android-template
 */
class ArtistsFragmentVM(fragment: ArtistsFragment,
                        binding: ArtistsFragmentBinding, savedInstance: Bundle?) : FragmentRecyclerBaseVM<ArtistVM, ArtistsFragment, ArtistsFragmentBinding>(fragment, binding, savedInstance) {

    override fun itemLayoutResource(): Int {
        return R.layout.artist_item
    }

    override fun itemData(): Int {
        return BR.artistVM
    }


    override fun onCreate(savedInstance: Bundle?) {
        super.onCreate(savedInstance)
        LocalMusicManager.INSTANCE.share().subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe { o ->
                    val list = SQLite.select()
                            .from(ZikoArtist::class.java)
                            .queryList()
                    items.clear()
                    for (artist in list) {
                        items.add(ArtistVM(fragment.context, artist))
                    }
                }
    }

    companion object {

        private val TAG = ArtistsFragmentVM::class.java.simpleName
    }
}
