package com.startogamu.zikobot.home.artists

import android.os.Bundle
import com.joxad.easydatabinding.fragment.v4.FragmentRecyclerBaseVM
import com.joxad.zikobot.data.db.ArtistManager
import com.joxad.zikobot.data.module.localmusic.manager.LocalMusicManager
import com.raizlabs.android.dbflow.rx2.kotlinextensions.list
import com.startogamu.zikobot.BR
import com.startogamu.zikobot.R
import com.startogamu.zikobot.databinding.ArtistsFragmentBinding
import io.reactivex.android.schedulers.AndroidSchedulers
import io.reactivex.schedulers.Schedulers

/**
 * Generated by generator-android-template
 */
class ArtistsFragmentVM(fragment: ArtistsFragment,
                        binding: ArtistsFragmentBinding, savedInstance: Bundle?) : FragmentRecyclerBaseVM<ArtistVM, ArtistsFragment, ArtistsFragmentBinding>(fragment, binding, savedInstance) {

    override fun itemLayoutResource(): Int {
        return R.layout.artist_item
    }

    override fun itemData(): Int {
        return BR.artistVM
    }


    override fun onCreate(savedInstance: Bundle?) {
        super.onCreate(savedInstance)
        updateList(true)
        LocalMusicManager.INSTANCE.synchroDone
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(this::updateList)
    }

    private fun updateList(done: Boolean) {
        if (!done)
            return
        items.clear()
        ArtistManager.findAll()
                .list { list ->
                    for (artist in list) {
                        items.add(ArtistVM(fragment.context, artist))
                    }
                }

    }

    companion object {

        private val TAG = ArtistsFragmentVM::class.java.simpleName
    }
}
