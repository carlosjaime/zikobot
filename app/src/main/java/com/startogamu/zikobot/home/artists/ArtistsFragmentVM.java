package com.startogamu.zikobot.home.artists;

import android.databinding.ObservableArrayList;
import android.os.Bundle;
import android.support.annotation.Nullable;

import com.joxad.easydatabinding.fragment.v4.FragmentBaseVM;
import com.joxad.zikobot.data.db.model.ZikoArtist;
import com.joxad.zikobot.data.module.localmusic.manager.LocalMusicManager;
import com.raizlabs.android.dbflow.sql.language.SQLite;
import com.startogamu.zikobot.BR;
import com.startogamu.zikobot.R;
import com.startogamu.zikobot.databinding.ArtistsFragmentBinding;

import java.util.List;

import io.reactivex.android.schedulers.AndroidSchedulers;
import io.reactivex.schedulers.Schedulers;
import me.tatarka.bindingcollectionadapter2.ItemBinding;

/**
 * Generated by generator-android-template
 */
public class ArtistsFragmentVM extends FragmentBaseVM<ArtistsFragment, ArtistsFragmentBinding> {

    private static final String TAG = ArtistsFragmentVM.class.getSimpleName();

    public ItemBinding<ArtistVM> itemBinding = ItemBinding.of(BR.artistVM, R.layout.artist_item);
    public ObservableArrayList<ArtistVM> items;

    /***
     * @param fragment
     * @param binding
     */
    public ArtistsFragmentVM(ArtistsFragment fragment, ArtistsFragmentBinding binding, @Nullable Bundle savedInstance) {
        super(fragment, binding, savedInstance);
    }

    @Override
    public void onCreate(@Nullable Bundle savedInstance) {
        LocalMusicManager.INSTANCE.share().subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(o -> {
                    List<ZikoArtist> list = SQLite.select()
                            .from(ZikoArtist.class)
                            .queryList();
                    items.clear();
                    for (ZikoArtist album : list) {
                        items.add(new ArtistVM(fragment.getContext(), album));
                    }
                });
    }
}
