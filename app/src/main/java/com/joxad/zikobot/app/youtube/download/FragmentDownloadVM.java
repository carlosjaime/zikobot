package com.joxad.zikobot.app.youtube.download;

import android.databinding.ObservableBoolean;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.view.View;

import com.bumptech.glide.Glide;
import com.joxad.easydatabinding.bottomsheet.DialogBottomSheetBaseVM;
import com.joxad.zikobot.app.core.utils.EXTRA;
import com.joxad.zikobot.app.databinding.FragmentDownloadBinding;
import com.joxad.zikobot.app.youtube.YoutubeDownloader;
import com.joxad.zikobot.data.module.youtube.VideoItem;

import org.greenrobot.eventbus.EventBus;
import org.greenrobot.eventbus.Subscribe;

/**
 * Generated by generator-android-template
 */
public class FragmentDownloadVM extends DialogBottomSheetBaseVM<FragmentDownload, FragmentDownloadBinding> {

    public static final String TAG = FragmentDownloadVM.class.getSimpleName();
    private VideoItem model;
    public ObservableBoolean downloading;

    /***
     * @param fragment
     * @param binding
     */
    public FragmentDownloadVM(FragmentDownload fragment, FragmentDownloadBinding binding) {
        super(fragment, binding);
    }

    @Override
    public void onCreate() {
        downloading = new ObservableBoolean(false);
        model = fragment.getArguments().getParcelable(EXTRA.VIDEO);
        YoutubeDownloader.INSTANCE.init(fragment.getContext());
        binding.etTrack.setText(model.getTitle());
        Glide.with(fragment.getContext()).load(model.getThumbnailURL()).into(binding.ivTrack);


    }

    @Override
    public void onCreate(@Nullable Bundle savedInstance) {

    }

    @Override
    public void onResume() {
        super.onResume();
        EventBus.getDefault().register(this);
    }


    @Subscribe
    public void onReceive(EventDownloadDone e) {
        downloading.set(false);

    }

    @Override
    public void onPause() {
        super.onPause();
        EventBus.getDefault().unregister(this);
    }

    public void download(View view) {

        view.animate().scaleX(0).setDuration(300).withEndAction(() -> {
            downloading.set(true);
        }).start();
        model.setTitle(binding.etTrack.getText().toString());
        String album = binding.etAlbum.getText().toString();
        String artist = binding.etArtist.getText().toString();
        YoutubeDownloader.INSTANCE.download(model, artist, album.isEmpty() ? null : album);
    }

}
